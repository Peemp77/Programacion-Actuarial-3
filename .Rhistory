if (moneda == 1) {
z <- z - 1
} else {
z <- z + 1
}
}
faa
z <- 5
a <- 0
faa <- c()
while (z>=3 && z<=10) {
a <- a + 1
faa <- c(faa,z)
v <- runif(1,0,1)
if ( v <0.5 ) {
moneda <- 1
}  else {
moneda <-0
}
if (moneda == 1) {
z <- z - 1
} else {
z <- z + 1
}
}
faa
z <- 5
a <- 0
faa <- c()
while (z>=3 && z<=10) {
a <- a + 1
faa <- c(faa,z)
v <- runif(1,0,1)
if ( v <0.5 ) {
moneda <- 1
}  else {
moneda <-0
}
if (moneda == 1) {
z <- z - 1
} else {
z <- z + 1
}
}
faa
z <- 5
a <- 0
faa <- c()
while (z>=3 && z<=10) {
a <- a + 1
faa <- c(faa,z)
v <- runif(1,0,1)
if ( v <0.5 ) {
moneda <- 1
}  else {
moneda <-0
}
if (moneda == 1) {
z <- z - 1
} else {
z <- z + 1
}
}
faa
?paste
?plot
lm
?lm
search()
library(ggplot2)
search()
install.packages("swirl")
library(swirl)
ls
ls()
rm(list = "ls")
rm(list = ls())
swirl()
swirl()
swirl
?swirl
??swirl
install.packages(swirl)
install.packages("swirl")
library("swirl")
swirl()
swirl()
install.packages("swirl")
library("swirl")
swirl()
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,100)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my
my_div
getwd()
ls()
x <- 9
ls
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files("testdir")
dir()
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path()
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink("testdir2",T)
unlink("testdir2", recursive = TRUE)
setwd("old.dir")
setwd(old.dir)
unlink("testdir",recursive = TRUE)
1:20
pi:10
15:1
?';
1
?Â´:
?summary.aov
''
''
?`:
`
?`:`
seq(1,20)
seq(0,10,by = 0.5)
my_seq <- seq(5,10,length=30
)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name <- c(my_char, "Pablo")
my_name
paste(my_name, collapse = " ")
paste("Hello","world",seo = " ")
paste("Hello","world",sep = " ")
paste("Hello","world!",sep = " ")
paste(1:3,c("X","Y","Z"), sep = "")
paste((LETTERS,1:4, sep = "-"))
paste(LETTERS,1:4, sep = "-")
rm(ls())
ls
ls()
rm(ls())
rm(ls)
x <- c(44,NA,5,NA)
X*3
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
Inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[3]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- C("foo","bar","norf")
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?,atrix
?matrix
matrix(1:20,4,5)
my_matrix2 <- matrix(1:20,5,4)
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix2)
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patients","age","weight","raiting","test")
cnames <- c("patient","age","weight","bp","raiting","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
library("swirl")
swirl()
True == TRUE
TRUE == TRUE
(FAlSE == TRUE) == FALSE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | C(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical("TWINS","TWINS")
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(c(TRUE, FALSE, TRUE))
which(c(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE))
which(ints>7)
any(ins < 0)
any(ints <0)
all(ints>0)
Sys.Date(7)
Sys.Date()
mean(c(2,4,5))
submit()
7
swirl()
swirl()
x
x
4
5
07
1
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <.
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_list <- sapply(flags,class)
cls_list <- lapply(flags,class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_color <- flags[,11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(flags,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
ok()
tapply(flags$population,flags$landmass, summary
)
completos("specdata/",112:114)
setwd("C:/Users/herna/Documents/Actuarios/Pablo Hernandez/test-repo/Programacion-Actuarial-3")
completos("specdata/",112:114)
completos <- function(directorio = "specdata/", id = 1:332){
foo <- c()
for(i in id){
bar <- read.csv(paste(directorio,formatC(i, width = 3,flag = "0"), ".csv", sep = ""))
b <- complete.cases(bar)
foo <- c(sum(b),foo)
}
data.frame(foo)
}
completos("specdata/",112:114)
mediacontaminante <- function(directorio= "specdata/",contaminante= "nitrate",id = 1:332){
a1 <- numeric()
for(i in id){
a <- read.csv(paste(directorio,formatC(i, width = 3,flag = "0"), ".csv", sep = ""))
a1 <- c(a1, a[[contaminante]])
}
return(mean(a1, na.rm = TRUE))
}
mediacontaminante(,,112:112)
mediacontaminante <- function(directorio= "specdata/",contaminante= "nitrate",id = 1:332){
a1 <- numeric()
for(i in id){
a <- read.csv(paste(directorio,formatC(i, width = 3,flag = "0"), ".csv", sep = ""))
a1 <- c(a1, a[[contaminante]])
}
mean(a1, na.rm = TRUE)
}
mediacontaminante(,,112:112)
mediacontaminante(,,112:112)
cor(1,1)
getwd()
completos <- function(directorio = "specdata/", id = 1:332){
foo <- c()
for(i in id){
bar <- read.csv(paste(directorio,formatC(i, width = 3,flag = "0"), ".csv", sep = ""))
b <- complete.cases(bar)
foo <- c(sum(b),foo)
}
data.frame(foo)
}
completos("specdata/",112:114)
completos("specdata/",112:300)
mediacontaminante(,,23)
x = 10
x
x == 10
lm
corr <- function(directorio="~/specdata/", horizonte=0) {
perro = completos(directory)
kor = perro[perro["nobs"] > horizonte, ]$id
correlacion = numeric()
for (i in kor) {
nread = read.csv(paste(directorio, "/", formatC(i, width = 3, flag = "0"),".csv", sep = ""))
perro2 = nread[complete.cases(newRead), ]
correlacion = c(correlacion, cor(perro2$sulfate, dff$nitrate))
}
return(corrr)
}
corr()
corr(,2)
corr(,0)
corr <- function(directorio="~/specdata/", horizonte=0) {
perro = completos(directorio)
kor = perro[perro["nobs"] > horizonte, ]$id
correlacion = numeric()
for (i in kor) {
nread = read.csv(paste(directorio, "/", formatC(i, width = 3, flag = "0"),".csv", sep = ""))
perro2 = nread[complete.cases(newRead), ]
correlacion = c(correlacion, cor(perro2$sulfate, dff$nitrate))
}
return(corrr)
}
corr(,0)
setwd("C:/Users/herna/Documents/Actuarios/Pablo Hernandez/test-repo/Programacion-Actuarial-3/specdata")
corr <- function(directorio="specdata/", horizonte=0) {
perro = completos(directorio)
kor = perro[perro["nobs"] > horizonte, ]$id
correlacion = numeric()
for (i in kor) {
nread = read.csv(paste(directorio, "/", formatC(i, width = 3, flag = "0"),".csv", sep = ""))
perro2 = nread[complete.cases(newRead), ]
correlacion = c(correlacion, cor(perro2$sulfate, dff$nitrate))
}
return(corrr)
}
corr(,0)
corr <- function(directorio="specdata/", horizonte=0) {
perro = completos()
kor = perro[perro["nobs"] > horizonte, ]$id
correlacion = numeric()
for (i in kor) {
nread = read.csv(paste(directorio, "/", formatC(i, width = 3, flag = "0"),".csv", sep = ""))
perro2 = nread[complete.cases(newRead), ]
correlacion = c(correlacion, cor(perro2$sulfate, dff$nitrate))
}
return(corrr)
}
corr(,0)
completos <- function(directorio = "specdata/", id = 1:332){
foo <- c()
for(i in id){
bar <- read.csv(paste(directorio,formatC(i, width = 3,flag = "0"), ".csv", sep = ""))
b <- complete.cases(bar)
foo <- c(sum(b),foo)
}
data.frame(foo)
}
completos("specdata/",112:300)
corr <- function(directorio="specdata/", horizonte=0) {
perro = completos()
kor = perro[perro["nobs"] > horizonte, ]$id
correlacion = numeric()
for (i in kor) {
nread = read.csv(paste(directorio, "/", formatC(i, width = 3, flag = "0"),".csv", sep = ""))
perro2 = nread[complete.cases(newRead), ]
correlacion = c(correlacion, cor(perro2$sulfate, dff$nitrate))
}
return(corrr)
}
corr(,0)
corr(,1)
corr <- function(directorio="specdata/", horizonte=0) {
perro = completos()
kor = perro[perro["nobs"] > horizonte, ]$id
correlacion = numeric()
for (i in kor) {
nread = read.csv(paste(directorio, "/", formatC(i, width = 3, flag = "0"),".csv", sep = ""))
perro2 = nread[complete.cases(newRead), ]
correlacion = c(correlacion, cor(perro2$sulfate, dff$nitrate))
}
return(correlacion)
}
corr(,1)
corr <- function(directorio="specdata/", horizonte=0) {
perro = completos()
kor = perro[perro["nobs"] > horizonte, ]$id
correlacion = numeric()
for (i in kor) {
nread = read.csv(paste(directorio, formatC(i, width = 3, flag = "0"),".csv", sep = ""))
perro2 = nread[complete.cases(newRead), ]
correlacion = c(correlacion, cor(perro2$sulfate, dff$nitrate))
}
return(correlacion)
}
corr(,1)
setwd("C:/Users/herna/Documents/Actuarios/Pablo Hernandez/test-repo/Programacion-Actuarial-3")
corr(,1)
hacer.potencia(n)
hacer.potencia(6)
hacer.potencia <- function(n){
potencia <- function(x){
x^n
}
potencia
}
hacer.potencia(6)
a <- hacer.potencia(6)
a
a(2)
cubica <- hacer.potencia(3)
cuadrada <- hacer.potencia(2)
cubica(3)
cuadrada(3)
